{% set name = "stopit" %}
{% set version = "1.1.2" %}
{% set sha256 = "f7f39c583fd92027bd9d06127b259aee7a5b7945c1f1fa56263811e1e766996d" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1
  noarch: python
  script: {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  host:
    - python {{ python_min }}
    - pip
  run:
    - python >={{ python_min }}
    - setuptools

test:
  requires:
    - python {{ python_min }}
  imports:
    - stopit

about:
  home: https://pypi.python.org/pypi/stopit
  license: MIT
  license_family: MIT
  license_file: '{{ environ["RECIPE_DIR"] }}/LICENSE'
  summary: |
    Raise asynchronous exceptions in other thread, control the timeout of
    blocks or callables with a context manager or a decorator
  description: |
    This module provides:
      - a function that raises an exception in another thread, including the
        main thread.
      - two context managers that may stop its inner block activity on timeout.
      - two decorators that may stop its decorated callables on timeout.
  dev_url: https://github.com/glenfant/stopit

extra:
  recipe-maintainers:
    - bollwyvl
